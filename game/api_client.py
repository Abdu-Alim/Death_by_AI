import requests
import json
import random
from django.conf import settings
from .models import Situation

class DeepSeekClient:
    def __init__(self):
        self.api_key = settings.DEEPSEEK_API_KEY
        self.api_url = settings.DEEPSEEK_API_URL
        self.timeout = settings.TIMEOUT
        
    def generate_situation(self, category):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ DeepSeek API"""
        if not self.api_key or self.api_key == 'your_deepseek_api_key_here':
            return self._get_fallback_situation(category)
        
        prompt = f"""
        –°–æ–∑–¥–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∏ —Å–ª–æ–∂–Ω—É—é —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ –æ–ø–∞—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category}".
        –°–∏—Ç—É–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞) –∏ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ—Ç –∏–≥—Ä–æ–∫–∞ –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –≤—ã–∂–∏–≤–∞–Ω–∏—è.
        –û–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é –∫—Ä–∞—Ç–∫–æ, –Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ - 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
        –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}
        
        –ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π:
        - "–í—ã –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å –≤ –¥–∂—É–Ω–≥–ª—è—Ö –Ω–æ—á—å—é. –í–æ–∫—Ä—É–≥ —Å–ª—ã—à–Ω—ã —Ä—ã—á–∞–Ω–∏–µ —Ö–∏—â–Ω–∏–∫–æ–≤ –∏ —Å—Ç—Ä–∞–Ω–Ω—ã–µ —à–µ–ª–µ—Å—Ç—ã. –£ –≤–∞—Å —Ç–æ–ª—å–∫–æ –Ω–æ–∂ –∏ —Ñ–æ–Ω–∞—Ä–∏–∫."
        - "–ó–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–µ —Ä–∞–∑—Ä—É—à–∏–ª–æ –∑–¥–∞–Ω–∏–µ, –∏ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –ª–æ–≤—É—à–∫–µ –≤ –ø–æ–¥–≤–∞–ª–µ. –í–æ–¥–∞ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è."
        - "–í–æ –≤—Ä–µ–º—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ —Å –ø–æ—Ä—Ç–∞–ª–æ–º –≤—ã –ø–µ—Ä–µ–Ω–µ—Å–ª–∏—Å—å –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –∏–∑–º–µ—Ä–µ–Ω–∏–µ, –≥–¥–µ –∑–∞–∫–æ–Ω—ã —Ñ–∏–∑–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–Ω–∞—á–µ."
        
        –í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û —Ç–µ–∫—Å—Ç —Å–∏—Ç—É–∞—Ü–∏–∏, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
        """
        
        try:
            response = requests.post(
                self.api_url,
                headers={
                    'Content-Type': 'application/json',
                    'Authorization': f'Bearer {self.api_key}'
                },
                json={
                    'model': 'deepseek-chat',
                    'messages': [
                        {'role': 'system', 'content': '–¢—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–ª–æ–∂–Ω—ã—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ –≤—ã–∂–∏–≤–∞–Ω–∏–µ.'},
                        {'role': 'user', 'content': prompt}
                    ],
                    'max_tokens': 150,
                    'temperature': 0.8
                },
                timeout=self.timeout
            )
            
            if response.status_code == 200:
                data = response.json()
                situation_text = data['choices'][0]['message']['content'].strip()
                return situation_text
            else:
                print(f"API Error: {response.status_code} - {response.text}")
                return self._get_fallback_situation(category)
                
        except Exception as e:
            print(f"API Connection Error: {e}")
            return self._get_fallback_situation(category)
    
    def evaluate_survival_plan(self, situation_text, player_plan):
        """–°—Ç—Ä–æ–≥–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–ª–∞–Ω–∞ –≤—ã–∂–∏–≤–∞–Ω–∏—è —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏"""
        if not self.api_key or self.api_key == 'your_deepseek_api_key_here':
            return self._get_strict_fallback_evaluation(situation_text, player_plan)
        
        prompt = f"""
        –¢—ã - –°–¢–†–û–ì–ò–ô –∏ –†–ï–ê–õ–ò–°–¢–ò–ß–ù–´–ô —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤—ã–∂–∏–≤–∞–Ω–∏—é. –û—Ü–µ–Ω–∏ –ø–ª–∞–Ω –∏–≥—Ä–æ–∫–∞ –∏ —Å–æ–∑–¥–∞–π –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏.
        
        –°–ò–¢–£–ê–¶–ò–Ø: {situation_text}
        –ü–õ–ê–ù –ò–ì–†–û–ö–ê: {player_plan}
        
        –¢–≤–æ—è –∑–∞–¥–∞—á–∞:
        1. –û—Ü–µ–Ω–∏—Ç—å, –≤—ã–∂–∏–≤–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫ (survived: true/false) - –±—É–¥—å –°–¢–†–û–ì–ò–ú!
        2. –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –¥–∞–ª—å—à–µ
        3. –î–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–ª–∞–Ω–∞
        
        –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ (–ë–£–î–¨ –°–¢–†–û–ì–ò–ú!):
        - –ü–ª–∞–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–æ–≥–∏—á–Ω—ã–º –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º
        - –î–µ–π—Å—Ç–≤–∏—è –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏–∏
        - –£—á–∏—Ç—ã–≤–∞–π —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –≤—Ä–µ–º—è
        - –ë–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ –∞–±—Å—É—Ä–¥–Ω—ã–µ –ø–ª–∞–Ω—ã = —Å–º–µ—Ä—Ç—å
        - –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –∏–ª–∏ –æ–±—â–∏–µ –ø–ª–∞–Ω—ã = —Å–º–µ—Ä—Ç—å
        - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π = —Å–º–µ—Ä—Ç—å
        
        –í–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
        {{
            "survived": true/false,
            "story_continuation": "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –¥–∞–ª—å—à–µ...",
            "analysis": "–ö—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–ª–∞–Ω–∞"
        }}
        """
        
        try:
            response = requests.post(
                self.api_url,
                headers={
                    'Content-Type': 'application/json',
                    'Authorization': f'Bearer {self.api_key}'
                },
                json={
                    'model': 'deepseek-chat',
                    'messages': [
                        {'role': 'system', 'content': '–¢—ã —Å—Ç—Ä–æ–≥–∏–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤—ã–∂–∏–≤–∞–Ω–∏—é. –û—Ü–µ–Ω–∏–≤–∞–π –ø–ª–∞–Ω—ã —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ –∏ –±–µ–∑ —Å–Ω–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è.'},
                        {'role': 'user', 'content': prompt}
                    ],
                    'max_tokens': 350,
                    'temperature': 0.8
                },
                timeout=self.timeout
            )
            
            if response.status_code == 200:
                data = response.json()
                evaluation_text = data['choices'][0]['message']['content'].strip()
                
                # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
                try:
                    evaluation = json.loads(evaluation_text)
                    survived = evaluation.get('survived', False)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –≤—ã–∂–∏–ª - –°–¢–†–û–ì–û!
                    story_continuation = evaluation.get('story_continuation', '–ò—Å—Ç–æ—Ä–∏—è –Ω–µ –±—ã–ª–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞.')
                    analysis = evaluation.get('analysis', '–ê–Ω–∞–ª–∏–∑ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.')
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∏–¥–±—ç–∫
                    if survived:
                        feedback = f"üéâ –í–´ –í–´–ñ–ò–õ–ò!\n\nüìñ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: {story_continuation}\n\nüìä –ê–Ω–∞–ª–∏–∑: {analysis}"
                    else:
                        feedback = f"üíÄ –í–´ –ü–û–ì–ò–ë–õ–ò...\n\nüìñ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: {story_continuation}\n\nüìä –ê–Ω–∞–ª–∏–∑: {analysis}"
                    
                    return survived, feedback
                    
                except json.JSONDecodeError:
                    print(f"JSON Parse Error: {evaluation_text}")
                    return self._get_strict_fallback_evaluation(situation_text, player_plan)
            else:
                print(f"API Error: {response.status_code}")
                return self._get_strict_fallback_evaluation(situation_text, player_plan)
                
        except Exception as e:
            print(f"API Connection Error: {e}")
            return self._get_strict_fallback_evaluation(situation_text, player_plan)

    def _get_strict_fallback_evaluation(self, situation_text, player_plan):
        """–°—Ç—Ä–æ–≥–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∏—Å—Ç–æ—Ä–∏–∏"""
        plan_lower = player_plan.lower().strip()
        
        # –°–¢–†–û–ì–ê–Ø –ª–æ–≥–∏–∫–∞ –æ—Ü–µ–Ω–∫–∏
        survival_chance = 0.3  # –¢–æ–ª—å–∫–æ 30% —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        # –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        positive_keywords = [
            '—É–∫—Ä—ã—Ç–∏–µ', '—Å–∏–≥–Ω–∞–ª', '—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑', '–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ', '–ø–ª–∞–Ω', '–ø–æ–∏—Å–∫',
            '—ç–≤–∞–∫—É–∞—Ü–∏—è', '–ø–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å', '–æ—Ä–∏–µ–Ω—Ç–∏—Ä', '—Ä–µ—Å—É—Ä—Å—ã', '—Å—Ç—Ä–∞—Ç–µ–≥–∏—è', '–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'
        ]
        
        # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        negative_keywords = [
            '—Å–¥–∞—Ç—å—Å—è', '—É–º—Ä—É', '–ø–æ–≥–∏–±–Ω—É', '–∫–æ–Ω–µ—Ü', '–ø—Ä–æ—â–∞–π', '–ø–∞–Ω–∏–∫–∞', '–∫—Ä–∏—á–∞—Ç—å',
            '–±–µ–∂–∞—Ç—å', '–Ω–∞–¥–µ–∂–¥–∞', '–º–∞–≥–∏—è', '–≤–æ–ª—à–µ–±—Å—Ç–≤–æ', '—Å—É–ø–µ—Ä—Å–∏–ª–∞', '–∞–≤–æ—Å—å'
        ]
        
        # –û—Ü–µ–Ω–∏–≤–∞–µ–º –ø–ª–∞–Ω
        positive_score = sum(2 for word in positive_keywords if word in plan_lower)
        negative_score = sum(3 for word in negative_keywords if word in plan_lower)
        
        # –î–ª–∏–Ω–∞ –ø–ª–∞–Ω–∞ –≤–∞–∂–Ω–∞
        length_bonus = min(len(player_plan) / 100, 0.4)  # –ú–∞–∫—Å–∏–º—É–º +40% –∑–∞ –¥–ª–∏–Ω–Ω—ã–π –ø–ª–∞–Ω
        
        survival_chance += (positive_score * 0.1) - (negative_score * 0.15) + length_bonus
        survival_chance = max(0.05, min(0.8, survival_chance))  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —à–∞–Ω—Å—ã
        
        survived = random.random() < survival_chance
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
        if survived:
            story_templates = [
                f"–í–∞—à –ø–ª–∞–Ω —Å—Ä–∞–±–æ—Ç–∞–ª! {random.choice(['–í—ã –Ω–∞—à–ª–∏ —É–∫—Ä—ã—Ç–∏–µ', '–í–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∞—Ç—å —Å–∏–≥–Ω–∞–ª', '–í—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ'])} –∏ {random.choice(['–¥–æ–∂–¥–∞–ª–∏—Å—å –ø–æ–º–æ—â–∏', '–Ω–∞—à–ª–∏ —Å–ø–æ—Å–æ–± —Å–ø–∞—Å—Ç–∏—Å—å', '–ø–µ—Ä–µ–∂–∏–ª–∏ –æ–ø–∞—Å–Ω–æ—Å—Ç—å'])}.",
                f"–ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º {random.choice(['–≤—ã –∏–∑–±–µ–∂–∞–ª–∏ –≥–ª–∞–≤–Ω–æ–π —É–≥—Ä–æ–∑—ã', '–≤–∞–º —É–¥–∞–ª–æ—Å—å —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é', '–≤—ã –Ω–∞—à–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ'])} –∏ {random.choice(['–≤—ã–∂–∏–ª–∏ –≤–æ–ø—Ä–µ–∫–∏ –≤—Å–µ–º—É', '—Å–ø–∞—Å–ª–∏ —Å–µ–±—è', '–¥–æ–∂–∏–ª–∏ –¥–æ —É—Ç—Ä–∞'])}.",
                f"–í–∞—à–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –æ–∫–∞–∑–∞–ª–∞—Å—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π. {random.choice(['–í—ã —Å–º–æ–≥–ª–∏', '–í–∞–º —É–¥–∞–ª–æ—Å—å', '–í—ã —Å—É–º–µ–ª–∏'])} {random.choice(['–æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å —Å–µ–±—è', '–Ω–∞–π—Ç–∏ –ø–æ–º–æ—â—å', '–ø–µ—Ä–µ–∂–¥–∞—Ç—å –æ–ø–∞—Å–Ω–æ—Å—Ç—å'])} –∏ —Ç–µ–ø–µ—Ä—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
            ]
            story = random.choice(story_templates)
            analysis = "–ü–ª–∞–Ω –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ª–æ–≥–∏—á–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ —É—á—ë—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤."
        else:
            story_templates = [
                f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, {random.choice(['–≤–∞—à –ø–ª–∞–Ω –Ω–µ —É—á–µ–ª', '–≤—ã –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–ª–∏', '–≤—ã –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–ª–∏'])} {random.choice(['–≥–ª–∞–≤–Ω—É—é –æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è', '—Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'])}.",
                f"–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏–≤–µ–ª–∏ –∫ {random.choice(['–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º', '—É—Ö—É–¥—à–µ–Ω–∏—é —Å–∏—Ç—É–∞—Ü–∏–∏', '–∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∏—á–µ—Å–∫–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º'])}. {random.choice(['–®–∞–Ω—Å–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å', '–°–ø–∞—Å–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ', '–≠—Ç–æ –∫–æ–Ω–µ—Ü'])}.",
                f"–ü–ª–∞–Ω –æ–∫–∞–∑–∞–ª—Å—è {random.choice(['–Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º', '–æ–ø–∞—Å–Ω—ã–º', '–Ω–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º'])}. {random.choice(['–°–∏—Ç—É–∞—Ü–∏—è –≤—ã—à–ª–∞ –∏–∑-–ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª—è', '–í—Ä–µ–º—è –±—ã–ª–æ —É–ø—É—â–µ–Ω–æ', '–û—à–∏–±–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å —Ñ–∞—Ç–∞–ª—å–Ω–æ–π'])}."
            ]
            story = random.choice(story_templates)
            analysis = "–ü–ª–∞–Ω –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–¥—É–º–∞–Ω –¥–ª—è —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –≤—ã–∂–∏–≤–∞–Ω–∏—è."
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–¥–±—ç–∫
        if survived:
            feedback = f"üéâ –í–´ –í–´–ñ–ò–õ–ò!\n\nüìñ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: {story}\n\nüìä –ê–Ω–∞–ª–∏–∑: {analysis}"
        else:
            feedback = f"üíÄ –í–´ –ü–û–ì–ò–ë–õ–ò...\n\nüìñ –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: {story}\n\nüìä –ê–Ω–∞–ª–∏–∑: {analysis}"
        
        return survived, feedback
        
    def _get_fallback_situation(self, category):
        """–†–µ–∑–µ—Ä–≤–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"""
        fallback_situations = {
            'nature': [
                "–í—ã –∑–∞–±–ª—É–¥–∏–ª–∏—Å—å –≤ –≥–ª—É–±–æ–∫–æ–π –ø–µ—â–µ—Ä–µ. –§–æ–Ω–∞—Ä–∏–∫ —Å–∞–¥–∏—Ç—Å—è, –∞ –ø—É—Ç–∏ –Ω–∞–∑–∞–¥ –≤—ã –Ω–µ –ø–æ–º–Ω–∏—Ç–µ. –í–æ–∫—Ä—É–≥ –∞–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–µ–º–Ω–æ—Ç–∞ –∏ —Ç–∏—à–∏–Ω–∞.",
                "–í–æ –≤—Ä–µ–º—è —à—Ç–æ—Ä–º–∞ –≤–∞—à—É –ª–æ–¥–∫—É –≤—ã–±—Ä–æ—Å–∏–ª–æ –Ω–∞ –Ω–µ–æ–±–∏—Ç–∞–µ–º—ã–π –æ—Å—Ç—Ä–æ–≤. –†–∞—Ü–∏–∏ –Ω–µ—Ç, –µ–¥—ã –Ω–∞ 2 –¥–Ω—è, –ø—Ä–µ—Å–Ω–∞—è –≤–æ–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.",
                "–í—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –º–µ–¥–≤–µ–¥—è –≥—Ä–∏–∑–ª–∏ –≤ –ª–µ—Å—É. –ú–µ–¥–≤–µ–¥—å –∑–∞–º–µ—Ç–∏–ª –≤–∞—Å, –≤—Å—Ç–∞–ª –Ω–∞ –∑–∞–¥–Ω–∏–µ –ª–∞–ø—ã –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–∏–±–ª–∏–∂–∞—Ç—å—Å—è. –£–±–µ–∂–∞—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ."
            ],
            'disaster': [
                "–í –Ω–µ–±–æ—Å–∫—Ä–µ–±–µ –Ω–∞—á–∞–ª—Å—è –ø–æ–∂–∞—Ä. –í—ã –Ω–∞ 25 —ç—Ç–∞–∂–µ, –ª–∏—Ñ—Ç—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –ª–µ—Å—Ç–Ω–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –µ–¥–∫–∏–º –¥—ã–º–æ–º. –û–≥–æ–Ω—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ.",
                "–ù–∞ –∞—Ç–æ–º–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∞–≤–∞—Ä–∏—è. –û–±—ä—è–≤–ª–µ–Ω–∞ —ç–≤–∞–∫—É–∞—Ü–∏—è, –Ω–æ –¥–æ—Ä–æ–≥–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –£—Ä–æ–≤–µ–Ω—å —Ä–∞–¥–∏–∞—Ü–∏–∏ —Ä–∞—Å—Ç–µ—Ç —Å –∫–∞–∂–¥–æ–π –º–∏–Ω—É—Ç–æ–π.",
                "–ù–∞–≤–æ–¥–Ω–µ–Ω–∏–µ –∑–∞—Ç–æ–ø–∏–ª–æ –≥–æ—Ä–æ–¥. –í—ã –Ω–∞ –∫—Ä—ã—à–µ –¥–æ–º–∞, –≤–æ–¥–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, –ø–æ–º–æ—â–∏ –Ω–µ –≤–∏–¥–Ω–æ. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã –±–ª–∏–∑–∫–∞ –∫ –Ω—É–ª—é."
            ],
            'fantasy': [
                "–í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏, —á—Ç–æ –º–æ–∂–µ—Ç–µ —á–∏—Ç–∞—Ç—å –º—ã—Å–ª–∏. –ù–æ —Ç–µ–ø–µ—Ä—å —á—É–∂–∏–µ –º—ã—Å–ª–∏ –º–µ—à–∞—é—Ç –≤–∞–º —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è, –∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ —á—É–≤—Å—Ç–≤—É—é—Ç –≤–∞—à–µ –≤—Ç–æ—Ä–∂–µ–Ω–∏–µ.",
                "–í–∞–º –ø–æ–¥–∞—Ä–∏–ª–∏ –∫–æ–ª—å—Ü–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª–Ω—è–µ—Ç –∂–µ–ª–∞–Ω–∏—è, –Ω–æ –∫–∞–∂–¥–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–µ–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∂–µ–ª–∞–Ω–∏–µ –≤—ã–∑–≤–∞–ª–æ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—É.",
                "–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–∏—Ä, –≥–¥–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –∞ –º–∞–≥–∏—è —Ä–µ–∞–ª—å–Ω–∞, –Ω–æ –≤—ã –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –±–µ–∑ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π. –ú–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —Å—á–∏—Ç–∞—é—Ç –≤–∞—Å —É–≥—Ä–æ–∑–æ–π."
            ]
        }
        return random.choice(fallback_situations.get(category, fallback_situations['nature']))